{
	"openapi": "3.0.2",
	"info": {
		"title": "Aqqalbot API Service",
		"description": "API service for Aqqal chatbot, Aqqalbot",
		"version": "0.1.0"
	},
	"paths": {
		"/chats/": {
			"post": {
				"tags": [
					"chats"
				],
				"summary": "New Chat",
				"description": "Creates a new chat with the given bot_id",
				"operationId": "new_chat_chats__post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/NewChatRequest"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"OAuth2PasswordBearer": []
					}
				]
			}
		},
		"/chats/{chat_id}": {
			"get": {
				"tags": [
					"chats"
				],
				"summary": "Get Chat From Datastore",
				"description": "Returns a chat from datastore by id",
				"operationId": "get_chat_from_datastore_chats__chat_id__get",
				"parameters": [
					{
						"required": true,
						"schema": {
							"title": "Chat Id",
							"type": "string"
						},
						"name": "chat_id",
						"in": "path"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Chat"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"OAuth2PasswordBearer": []
					}
				]
			}
		},
		"/chats/{chat_id}/messages": {
			"post": {
				"tags": [
					"chats"
				],
				"summary": "New Message",
				"description": "Returns a response from the bot for the message added to the chat",
				"operationId": "new_message_chats__chat_id__messages_post",
				"parameters": [
					{
						"required": true,
						"schema": {
							"title": "Chat Id",
							"type": "string"
						},
						"name": "chat_id",
						"in": "path"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/NewMessageRequest"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"OAuth2PasswordBearer": []
					}
				]
			}
		},
		"/bots": {
			"get": {
				"summary": "Get Bots",
				"description": "Returns a list of all bots",
				"operationId": "get_bots_bots_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"title": "Response Get Bots Bots Get",
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Bot"
									}
								}
							}
						}
					}
				},
				"security": [
					{
						"OAuth2PasswordBearer": []
					}
				]
			},
			"post": {
				"summary": "New Bot",
				"description": "Creates a new bot",
				"operationId": "new_bot_bots_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/NewBotRequest"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Bot"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"OAuth2PasswordBearer": []
					}
				]
			}
		},
		"/bots/default": {
			"get": {
				"summary": "Default Bot",
				"description": "Returns the default bot",
				"operationId": "default_bot_bots_default_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Bot"
								}
							}
						}
					}
				},
				"security": [
					{
						"OAuth2PasswordBearer": []
					}
				]
			},
			"patch": {
				"summary": "Update Default Bot",
				"description": "Updates the default bot. Does not allow changing the name of default bot.",
				"operationId": "update_default_bot_bots_default_patch",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateBotRequest"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Bot"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"OAuth2PasswordBearer": []
					}
				]
			}
		},
		"/bots/{id}": {
			"get": {
				"summary": "Get Bot By Id",
				"description": "Gets a bot by id",
				"operationId": "get_bot_by_id_bots__id__get",
				"parameters": [
					{
						"required": true,
						"schema": {
							"title": "Id",
							"type": "string"
						},
						"name": "id",
						"in": "path"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Bot"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"OAuth2PasswordBearer": []
					}
				]
			},
			"patch": {
				"summary": "Update Bot By Id",
				"description": "Updates a bot by id. Does not allow changing the name of default bot.",
				"operationId": "update_bot_by_id_bots__id__patch",
				"parameters": [
					{
						"required": true,
						"schema": {
							"title": "Id",
							"type": "string"
						},
						"name": "id",
						"in": "path"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateBotRequest"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Bot"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"security": [
					{
						"OAuth2PasswordBearer": []
					}
				]
			}
		}
	},
	"components": {
		"schemas": {
			"Bot": {
				"title": "Bot",
				"required": [
					"name",
					"created_at",
					"prompt",
					"model_id"
				],
				"type": "object",
				"properties": {
					"_id": {
						"title": " Id",
						"type": "string"
					},
					"name": {
						"title": "Name",
						"type": "string"
					},
					"created_at": {
						"title": "Created At",
						"type": "integer"
					},
					"prompt": {
						"title": "Prompt",
						"type": "string"
					},
					"model_id": {
						"title": "Model Id",
						"type": "string"
					}
				}
			},
			"Chat": {
				"title": "Chat",
				"required": [
					"bot"
				],
				"type": "object",
				"properties": {
					"_id": {
						"title": " Id",
						"type": "string"
					},
					"bot": {
						"$ref": "#/components/schemas/Bot"
					},
					"created_at": {
						"title": "Created At",
						"type": "integer"
					},
					"last_message": {
						"title": "Last Message",
						"type": "integer",
						"default": 0
					},
					"messages": {
						"title": "Messages",
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Message"
						},
						"default": []
					},
					"model_context": {
						"$ref": "#/components/schemas/OpenAIContext"
					}
				}
			},
			"HTTPValidationError": {
				"title": "HTTPValidationError",
				"type": "object",
				"properties": {
					"detail": {
						"title": "Detail",
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ValidationError"
						}
					}
				}
			},
			"Message": {
				"title": "Message",
				"required": [
					"by",
					"content"
				],
				"type": "object",
				"properties": {
					"created_at": {
						"title": "Created At",
						"type": "integer"
					},
					"by": {
						"title": "By",
						"enum": [
							"user",
							"bot"
						],
						"type": "string"
					},
					"content": {
						"title": "Content",
						"type": "string"
					}
				}
			},
			"NewBotRequest": {
				"title": "NewBotRequest",
				"required": [
					"prompt",
					"model_id"
				],
				"type": "object",
				"properties": {
					"name": {
						"title": "Name",
						"type": "string"
					},
					"prompt": {
						"title": "Prompt",
						"type": "string"
					},
					"model_id": {
						"title": "Model Id",
						"type": "string"
					}
				}
			},
			"NewChatRequest": {
				"title": "NewChatRequest",
				"type": "object",
				"properties": {
					"bot_id": {
						"title": "Bot Id",
						"type": "string"
					},
					"bot_name": {
						"title": "Bot Name",
						"type": "string"
					}
				}
			},
			"NewMessageRequest": {
				"title": "NewMessageRequest",
				"required": [
					"content"
				],
				"type": "object",
				"properties": {
					"content": {
						"title": "Content",
						"type": "string"
					}
				}
			},
			"OpenAIContext": {
				"title": "OpenAIContext",
				"required": [
					"messages"
				],
				"type": "object",
				"properties": {
					"messages": {
						"title": "Messages",
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/OpenAIMessage"
						}
					}
				}
			},
			"OpenAIMessage": {
				"title": "OpenAIMessage",
				"required": [
					"role"
				],
				"type": "object",
				"properties": {
					"role": {
						"title": "Role",
						"enum": [
							"system",
							"assistant",
							"tool",
							"user"
						],
						"type": "string"
					},
					"content": {
						"title": "Content",
						"type": "string"
					}
				}
			},
			"UpdateBotRequest": {
				"title": "UpdateBotRequest",
				"type": "object",
				"properties": {
					"name": {
						"title": "Name",
						"type": "string"
					},
					"prompt": {
						"title": "Prompt",
						"type": "string"
					},
					"model_id": {
						"title": "Model Id",
						"type": "string"
					}
				}
			},
			"ValidationError": {
				"title": "ValidationError",
				"required": [
					"loc",
					"msg",
					"type"
				],
				"type": "object",
				"properties": {
					"loc": {
						"title": "Location",
						"type": "array",
						"items": {
							"anyOf": [
								{
									"type": "string"
								},
								{
									"type": "integer"
								}
							]
						}
					},
					"msg": {
						"title": "Message",
						"type": "string"
					},
					"type": {
						"title": "Error Type",
						"type": "string"
					}
				}
			}
		},
		"securitySchemes": {
			"OAuth2PasswordBearer": {
				"type": "oauth2",
				"flows": {
					"password": {
						"scopes": {},
						"tokenUrl": "token"
					}
				}
			}
		}
	}
}